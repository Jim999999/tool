Nginx能做什么
——正向代理
代理的客户端，向远方服务器请求;
——反向代理
代理的远方服务器，响应客户端;
——负载均衡
来自客户端的请求分发给后台服务器，负载均衡配置一般都需要同时配置反向代理，通过反向代理跳转到负载均衡。
  支持自带3种负载均衡策略：轮询（默认），ip_hash ，（weight）权重。
  2种常用的第三方策略：
     fair：按后端服务器的响应时间来分配请求，响应时间短的优先分配。
	 url_hash ： 按访问url的hash结果来分配请求，使每个url定向到同一个后端服务器，后端服务器为缓存时比较有效。
	 

策略：
https://blog.csdn.net/qq_36125138/article/details/84144932	 
https://www.jianshu.com/p/5d6bd48b4c2f
	 
nginx全局变量
$args：这个变量等于请求行中的参数，同$query_string。
$is_args: 如果已经设置$args，则该变量的值为"?"，否则为""。
$content_length： 请求头中的Content-length字段。
$content_type： 请求头中的Content-Type字段。
$document_uri： 与$uri相同。
$document_root： 当前请求在root指令中指定的值。
$host： 请求主机头字段，否则为服务器名称。
$http_user_agent： 客户端agent信息。
$http_cookie： 客户端cookie信息。
$limit_rate： 这个变量可以限制连接速率。
$request_method： 客户端请求的动作，通常为GET或POST。
$remote_addr： 客户端的IP地址。
$remote_port： 客户端的端口。
$remote_user： 已经经过Auth Basic Module验证的用户名。
$request_body_file`: 客户端请求主体的临时文件名。
$request_uri: 请求的URI，带参数
$request_filename： 当前请求的文件路径，由root或alias指令与URI请求生成。
$scheme： 所用的协议，比如http或者是https，比如rewrite ^(.+)$ $scheme://example.com$1 redirect;。
$server_protocol： 请求使用的协议，通常是HTTP/1.0或HTTP/1.1。
$server_addr： 服务器地址，在完成一次系统调用后可以确定这个值。
$server_name： 服务器名称。
$server_port： 请求到达服务器的端口号。
$request_uri： 包含请求参数的原始URI，不包含主机名，如：/foo/bar.php?arg=baz，它无法修改。
$uri： 不带请求参数的当前URI，$uri不包含主机名，如/foo/bar.html可能和最初的值有不同，比如经过重定向之类的。它可以通过内部重定向，或者使用index指令进行修改。不包括协议和主机名，例如/foo/bar.html。

例子：
访问链接是：http://localhost:88/test1/test.php 
网站路径是：/var/www/html
$host：localhost
$server_port：88
$request_uri：http://localhost:88/test1/test.php
$document_uri：/test1/test.php
$document_root：/var/www/html
$request_filename：/var/www/html/test1/test.php




详细：
https://blog.csdn.net/qq_29677867/article/details/90112120